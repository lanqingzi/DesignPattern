cmake_minimum_required(VERSION 3.9)
project(DesignPattern CXX)

set(CMAKE_CXX_STANDARD 11)

include_directories(testSRC)
include_directories(simpleFactory)
include_directories(strategy)
include_directories(decorator)
include_directories(factory)
include_directories(prototype)
include_directories(facade)
include_directories(builder)
include_directories(templateMethod)
include_directories(functionPointer)
include_directories(publishSubscribe)
include_directories(abstractFactory)
include_directories(state)
include_directories(adapter)
include_directories(memento)
include_directories(composite)


add_subdirectory(simpleFactory)
add_subdirectory(strategy)
add_subdirectory(decorator)
add_subdirectory(factory)
add_subdirectory(prototype)
add_subdirectory(facade)
add_subdirectory(builder)
add_subdirectory(templateMethod)
add_subdirectory(functionPointer)
add_subdirectory(publishSubscribe)
add_subdirectory(abstractFactory)
add_subdirectory(state)
add_subdirectory(adapter)
add_subdirectory(memento)
add_subdirectory(composite)

add_executable(DesignPattern main.cpp)

target_link_libraries(DesignPattern s_simpleFactory)
target_link_libraries(DesignPattern s_strategy)
target_link_libraries(DesignPattern s_decorator)
target_link_libraries(DesignPattern s_factory)
target_link_libraries(DesignPattern s_prototype)
target_link_libraries(DesignPattern s_facade)
target_link_libraries(DesignPattern s_builder)
target_link_libraries(DesignPattern s_templateMethod)
target_link_libraries(DesignPattern s_functionPointer)
target_link_libraries(DesignPattern s_publishSubscribe)
target_link_libraries(DesignPattern s_abstractFactory)
target_link_libraries(DesignPattern s_state)
target_link_libraries(DesignPattern s_adapter)
target_link_libraries(DesignPattern s_memento)
target_link_libraries(DesignPattern s_composite)